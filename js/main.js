// NewsHub - –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// –í–µ—Ä—Å–∏—è: 2.1.8

import CONFIG from './config.js';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
window.jobsApiReady = false;
window.cachedNewsHTML = '';

// –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
window.loadingState = {
    rss: false,
    vk: false,
    jobs: false,
    
    setLoading(type, isLoading) {
        this[type] = isLoading;
        this.updateUI();
    },
    
    isAnyLoading() {
        return this.rss || this.vk || this.jobs;
    },
    
    updateUI() {
        const feedContainer = document.getElementById('feedContainer');
        if (!feedContainer) return;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
        if (this.isAnyLoading()) {
            const loadingTypes = [];
            if (this.rss) loadingTypes.push('RSS –Ω–æ–≤–æ—Å—Ç–∏');
            if (this.vk) loadingTypes.push('VK –ø–æ—Å—Ç—ã');
            if (this.jobs) loadingTypes.push('–í–∞–∫–∞–Ω—Å–∏–∏');
            
            const loadingText = loadingTypes.join(' + ');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–∞
            if (feedContainer.innerHTML.includes('spinner') || feedContainer.children.length === 0) {
                feedContainer.innerHTML = `
                    <div style="text-align: center; padding: 3rem;">
                        <div class="spinner"></div>
                        <h3>–ó–∞–≥—Ä—É–∂–∞–µ–º ${loadingText}...</h3>
                        <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ</p>
                    </div>
                `;
            }
        }
    }
};

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function updateAppVersion() {
    const versionElement = document.getElementById('appVersion');
    if (versionElement && CONFIG?.app?.version) {
        versionElement.textContent = `v${CONFIG.app.version}`;
        versionElement.title = `NewsHub –≤–µ—Ä—Å–∏—è ${CONFIG.app.version}`;
    }
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ–ª–µ–∫—Ç–æ–≤ –∏–∑ CONFIG
function initializeJobFiltersFromConfig() {
    if (!CONFIG) return;
    
    // –¢–∏–ø—ã –≤–∞–∫–∞–Ω—Å–∏–π —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const jobTypeSelect = document.getElementById('jobType');
    if (jobTypeSelect && CONFIG.jobTypes && CONFIG.jobCategories) {
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        const jobsByCategory = {};
        CONFIG.jobTypes.forEach(jobType => {
            const category = jobType.category || 'other';
            if (!jobsByCategory[category]) {
                jobsByCategory[category] = [];
            }
            jobsByCategory[category].push(jobType);
        });

        // –û—á–∏—â–∞–µ–º —Å–µ–ª–µ–∫—Ç
        jobTypeSelect.innerHTML = '<option value="">–õ—é–±–∞—è</option>';

        // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã
        Object.keys(jobsByCategory).forEach(categoryKey => {
            const category = CONFIG.jobCategories.find(cat => cat.id === categoryKey);
            const categoryName = category ? category.name : '–î—Ä—É–≥–æ–µ';
            
            const optgroup = document.createElement('optgroup');
            optgroup.label = categoryName;
            
            jobsByCategory[categoryKey].forEach(jobType => {
                const option = document.createElement('option');
                option.value = jobType.id;
                option.textContent = jobType.name;
                optgroup.appendChild(option);
            });
            
            jobTypeSelect.appendChild(optgroup);
        });
    }

    // –ì–æ—Ä–æ–¥–∞
    const citySelect = document.getElementById('jobCity');
    if (citySelect && CONFIG.cities) {
        citySelect.innerHTML = '';
        CONFIG.cities.forEach(city => {
            const option = document.createElement('option');
            option.value = city.id;
            option.textContent = city.name;
            citySelect.appendChild(option);
        });
    }
}

// –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function setCachedData(key, data) {
    try {
        const cacheData = {
            data: data,
            timestamp: Date.now(),
            version: CONFIG.app.version
        };
        localStorage.setItem(key, JSON.stringify(cacheData));
    } catch (error) {
        console.warn('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–µ—à:', error);
    }
}

function getCachedData(key, maxAge = 15 * 60 * 1000) { // 15 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    try {
        const cached = localStorage.getItem(key);
        if (!cached) return null;
        
        const cacheData = JSON.parse(cached);
        const age = Date.now() - cacheData.timestamp;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∏ –≤–æ–∑—Ä–∞—Å—Ç
        if (cacheData.version !== CONFIG.app.version || age > maxAge) {
            localStorage.removeItem(key);
            return null;
        }
        
        return cacheData.data;
    } catch (error) {
        console.warn('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–µ—à–∞:', error);
        return null;
    }
}

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
async function loadInitialContent(forceRefresh = false) {
    const feedContainer = document.getElementById('feedContainer');
    const loadingSpinner = document.getElementById('loadingSpinner');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à –µ—Å–ª–∏ –Ω–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (!forceRefresh) {
        const cachedArticles = getCachedData('news_cache');
        if (cachedArticles && cachedArticles.length > 0) {
            window.newsRenderer.renderCards(cachedArticles, feedContainer);
            window.cachedNewsHTML = feedContainer.innerHTML;
            console.log('üì∞ –ù–æ–≤–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫–µ—à–∞');
            return;
        }
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ RSS
    window.loadingState.setLoading('rss', true);
    
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º skeleton loading
        feedContainer.innerHTML = window.newsRenderer.renderSkeleton(5);
        if (loadingSpinner) loadingSpinner.classList.remove('hidden');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        console.log('üì∞ –ó–∞–≥—Ä—É–∂–∞–µ–º RSS –Ω–æ–≤–æ—Å—Ç–∏...');
        let articles = await window.rssAggregator.aggregateNews(50);
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç–µ–π:', articles.length);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–∏–ø—É –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const jobFilters = JSON.parse(localStorage.getItem('job_filters') || '{}');
        if (jobFilters.jobType && forceRefresh) {
            // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            const jobTypeName = CONFIG?.jobTypes?.find(j => j.id === jobFilters.jobType)?.name;
            if (jobTypeName) {
                const searchTerms = jobTypeName.toLowerCase().split(' ');
                articles = articles.filter(article => {
                    const content = (article.title + ' ' + article.description).toLowerCase();
                    return searchTerms.some(term => content.includes(term));
                });
            }
        }
        
        if (articles && articles.length > 0) {
            window.newsRenderer.renderCards(articles, feedContainer);
            window.cachedNewsHTML = feedContainer.innerHTML;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
            setCachedData('news_cache', articles);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ fallback –¥–∞–Ω–Ω—ã–µ
            const hasFallbackData = articles.some(article => article.isFallback);
            if (hasFallbackData) {
                showDemoDataNotification();
            }
        } else {
            feedContainer.innerHTML = window.newsRenderer.renderEmptyState();
        }
        
    } catch (error) {
        feedContainer.innerHTML = `
            <div class="error-state">
                <div class="error-icon">‚ö†Ô∏è</div>
                <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π</h3>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</p>
                <button class="btn btn--primary" onclick="loadInitialContent(true)">
                    –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                </button>
            </div>
        `;
    } finally {
        if (loadingSpinner) loadingSpinner.classList.add('hidden');
        window.loadingState.setLoading('rss', false);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.updateAppVersion = updateAppVersion;
window.initializeJobFiltersFromConfig = initializeJobFiltersFromConfig;
window.loadInitialContent = loadInitialContent;
window.setCachedData = setCachedData;
window.getCachedData = getCachedData;

export {
    updateAppVersion,
    initializeJobFiltersFromConfig,
    loadInitialContent,
    setCachedData,
    getCachedData
};
