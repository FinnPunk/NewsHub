// RSS Aggregator –¥–ª—è NewsHub
// –°–∏—Å—Ç–µ–º–∞ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤

class RSSAggregator {
    constructor() {
        this.sources = [
            // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ)
            { id: 'habr', name: 'Habr', url: 'https://habr.com/ru/rss/hub/programming/', category: 'tech', enabled: true, priority: 1 },
            { id: 'vc-tech', name: 'VC.ru', url: 'https://vc.ru/rss', category: 'tech', enabled: true, priority: 2 },
            
            // –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ IT –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã)
            { id: 'dev-to', name: 'Dev.to', url: 'https://dev.to/feed', category: 'tech', enabled: true, priority: 3 },
            { id: 'github-blog', name: 'GitHub Blog', url: 'https://github.blog/feed/', category: 'tech', enabled: true, priority: 4 },
            
            // –î–µ–ª–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –Ω–∞–¥–µ–∂–Ω—ã–µ)
            { id: 'kommersant', name: '–ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç—ä', url: 'https://www.kommersant.ru/RSS/news.xml', category: 'business', enabled: true, priority: 5 },
            
            // –û–±—â–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ)
            { id: 'lenta', name: '–õ–µ–Ω—Ç–∞.—Ä—É', url: 'https://lenta.ru/rss', category: 'general', enabled: true, priority: 6 },
            { id: 'ria', name: '–†–ò–ê –ù–æ–≤–æ—Å—Ç–∏', url: 'https://ria.ru/export/rss2/archive/index.xml', category: 'general', enabled: true, priority: 7 },
            
            // –î–∏–∑–∞–π–Ω –∏ UX (–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ)
            { id: 'smashing', name: 'Smashing Magazine', url: 'https://www.smashingmagazine.com/feed/', category: 'design', enabled: true, priority: 8 },
            { id: 'css-tricks', name: 'CSS-Tricks', url: 'https://css-tricks.com/feed/', category: 'design', enabled: true, priority: 9 },
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
            { id: 'freecodecamp', name: 'freeCodeCamp', url: 'https://www.freecodecamp.org/news/rss/', category: 'tech', enabled: true, priority: 10 },
            { id: 'hashnode', name: 'Hashnode', url: 'https://hashnode.com/rss', category: 'tech', enabled: true, priority: 11 },
            
            // –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏)
            { id: 'techcrunch', name: 'TechCrunch', url: 'https://techcrunch.com/feed/', category: 'tech', enabled: false },
            { id: 'wired', name: 'Wired', url: 'https://www.wired.com/feed/rss', category: 'tech', enabled: false },
            { id: 'rbc', name: '–†–ë–ö', url: 'https://rssexport.rbc.ru/rbcnews/news/20/full.rss', category: 'business', enabled: false },
            { id: 'vedomosti', name: '–í–µ–¥–æ–º–æ—Å—Ç–∏', url: 'https://www.vedomosti.ru/rss/news', category: 'business', enabled: false },
            { id: 'tass', name: '–¢–ê–°–°', url: 'https://tass.ru/rss/v2.xml', category: 'general', enabled: false },
            { id: 'gazeta', name: '–ì–∞–∑–µ—Ç–∞.—Ä—É', url: 'https://www.gazeta.ru/export/rss/lenta.xml', category: 'general', enabled: false },
            { id: 'finam', name: '–§–∏–Ω–∞–º', url: 'https://www.finam.ru/analysis/conews/rsspoint/', category: 'finance', enabled: false },
            { id: 'investing', name: 'Investing.com', url: 'https://ru.investing.com/rss/news.rss', category: 'finance', enabled: false }
        ];
        
        // –ù–µ—Å–∫–æ–ª—å–∫–æ CORS –ø—Ä–æ–∫—Å–∏ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ (–∏–∑ –∏–∑—É—á–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤)
        this.corsProxies = [
            'https://api.allorigins.win/get?url=',
            'https://corsproxy.io/?',
            'https://cors-anywhere.herokuapp.com/',
            'https://api.codetabs.com/v1/proxy?quest=',
            'https://thingproxy.freeboard.io/fetch/'
        ];
        this.currentProxyIndex = 0;
        
        // –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ (–∏–∑ newshub-master-final)
        this.selectedProfessions = [];
        this.relevanceScoring = true;
        
        this.cache = new Map();
        this.cacheTimeout = 15 * 60 * 1000; // 15 –º–∏–Ω—É—Ç
        this.articles = [];
        this.isLoading = false;
        this.failedSources = new Set(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        
        this.init();
    }
    
    init() {
        this.loadSavedSources();
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    loadSavedSources() {
        try {
            const saved = localStorage.getItem('rss_sources');
            if (saved) {
                const savedSources = JSON.parse(saved);
                this.sources = this.sources.map(source => {
                    const savedSource = savedSources.find(s => s.id === source.id);
                    return savedSource ? { ...source, ...savedSource } : source;
                });
            }
        } catch (error) {
            // –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        }
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    saveSources() {
        try {
            localStorage.setItem('rss_sources', JSON.stringify(this.sources));
        } catch (error) {
            // –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        }
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    getActiveSources() {
        return this.sources.filter(source => source.enabled);
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    addSource(sourceData) {
        const newSource = {
            id: Date.now().toString(),
            name: sourceData.name,
            url: sourceData.url,
            category: sourceData.category || 'general',
            enabled: true
        };
        
        this.sources.push(newSource);
        this.saveSources();
        return newSource;
    }
    
    // –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    removeSource(sourceId) {
        this.sources = this.sources.filter(s => s.id !== sourceId);
        this.saveSources();
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    toggleSource(sourceId, enabled) {
        const source = this.sources.find(s => s.id === sourceId);
        if (source) {
            source.enabled = enabled;
            this.saveSources();
        }
    }
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
    async aggregateNews(maxArticles = 50) {
        if (this.isLoading) {
            // –ê–≥—Ä–µ–≥–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
            return this.articles;
        }
        
        this.isLoading = true;
        try {
            const activeSources = this.getActiveSources();
            
            const promises = activeSources.map(source => this.fetchFromSource(source));
            const results = await Promise.allSettled(promises);
            
            // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
            let allArticles = [];
            let successfulSources = 0;
            
            results.forEach((result, index) => {
                if (result.status === 'fulfilled' && result.value && result.value.length > 0) {
                    // –§–∏–ª—å—Ç—Ä—É–µ–º fallback —Å—Ç–∞—Ç—å–∏
                    const realArticles = result.value.filter(article => !article.isFallback);
                    if (realArticles.length > 0) {
                        allArticles = allArticles.concat(realArticles);
                        successfulSources++;
                    }
                } else {
                    // –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
                }
            });
            
            // –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
            if (allArticles.length === 0) {
                // RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
                allArticles = this.selectedProfessions.length > 0 
                    ? this.generatePersonalizedDemoArticles() 
                    : this.generateDemoArticles();
            }
            
            // –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
            const uniqueArticles = this.deduplicateArticles(allArticles);
            const sortedArticles = this.sortArticles(uniqueArticles);
            
            this.articles = sortedArticles.slice(0, maxArticles);
            
            const statusMessage = successfulSources > 0 
                ? `‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${this.articles.length} —Å—Ç–∞—Ç–µ–π –∏–∑ ${successfulSources}/${activeSources.length} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤`
                : `üìã –í—Å–µ RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç (${this.articles.length} —Å—Ç–∞—Ç–µ–π)`;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if (typeof window.showToast === 'function') {
                if (successfulSources === 0) {
                    window.showToast('RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç', 'warning');
                } else if (successfulSources < activeSources.length) {
                    window.showToast(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ ${successfulSources}/${activeSources.length} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤`, 'info');
                } else {
                    window.showToast(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${this.articles.length} –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π`, 'success');
                }
            }
            
            // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.cacheArticles();
            
            return this.articles;
            
        } catch (error) {
            // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
            
            // –í —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
            this.articles = this.selectedProfessions.length > 0 
                ? this.generatePersonalizedDemoArticles() 
                : this.generateDemoArticles();
                
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (typeof window.showToast === 'function') {
                window.showToast('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ RSS, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç', 'error');
            }
            
            return this.articles;
        } finally {
            this.isLoading = false;
        }
    }
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –æ–¥–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    async fetchFromSource(source) {
        try {
            const cacheKey = `rss_${source.id}`;
            const cached = this.cache.get(cacheKey);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
            if (cached && Date.now() - cached.timestamp < this.cacheTimeout) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à
                return cached.articles;
            }
                        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫
            if (this.failedSources.has(source.id)) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ (–≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ)
                return [];
            }
            
            let articles = [];
            let lastError = null;
            
            // –ü—Ä–æ–±—É–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–∫—Å–∏
            for (let i = 0; i < this.corsProxies.length; i++) {
                const proxyIndex = (this.currentProxyIndex + i) % this.corsProxies.length;
                const proxy = this.corsProxies[proxyIndex];
                
                try {
                    // –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–∫—Å–∏
                    
                    const controller = new AbortController();
                    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
                    
                    const response = await fetch(`${proxy}${encodeURIComponent(source.url)}`, {
                        method: 'GET',
                        headers: {
                            'Accept': 'application/json, text/xml, application/xml, text/plain',
                            'User-Agent': 'NewsHub/1.0'
                        },
                        signal: controller.signal
                    });
                    
                    clearTimeout(timeoutId);
                    
                    if (!response.ok) {
                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                    }
                    
                    let xmlText;
                    const contentType = response.headers.get('content-type') || '';
                    
                    if (contentType.includes('application/json')) {
                        const data = await response.json();
                        xmlText = data.contents || data.data || data;
                    } else {
                        xmlText = await response.text();
                    }
                    
                    if (!xmlText) {
                        throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞');
                    }
                    
                    articles = this.parseRSS(xmlText, source);
                    
                    if (articles.length > 0) {
                        // –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏ - –∫—ç—à–∏—Ä—É–µ–º –∏ –≤—ã—Ö–æ–¥–∏–º
                        // –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å—Ç–∞—Ç—å–∏
                        this.cache.set(cacheKey, {
                            articles,
                            timestamp: Date.now()
                        });
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–∫—Å–∏
                        this.currentProxyIndex = proxyIndex;
                        return articles;
                    }
                    
                } catch (error) {
                    lastError = error;
                    // –ü—Ä–æ–∫—Å–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
                    
                    // –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–π–º–∞—É—Ç, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏ –±—ã—Å—Ç—Ä–µ–µ
                    if (error.name === 'AbortError') {
                        // –¢–∞–π–º–∞—É—Ç –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
                        continue;
                    }
                }
            }
            
            // –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–∫—Å–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞ –≤—Ä–µ–º—è
            // –ò—Å—Ç–æ—á–Ω–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            this.failedSources.add(source.id);
            
            // –£–±–∏—Ä–∞–µ–º –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç (—É–º–µ–Ω—å—à–∏–ª–∏ –≤—Ä–µ–º—è)
            setTimeout(() => {
                this.failedSources.delete(source.id);
                // –ò—Å—Ç–æ—á–Ω–∏–∫ —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            }, 15 * 60 * 1000);
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            if (source.priority && source.priority <= 5) {
                return this.getFallbackArticles(source);
            }
            
            return [];
            
        } catch (error) {
            // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            return this.getFallbackArticles(source);
        }
    }
    
    // Fallback –¥–∞–Ω–Ω—ã–µ –∫–æ–≥–¥–∞ RSS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    getFallbackArticles(source) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ
        
        const fallbackArticles = [
            {
                id: `fallback-${source.id}-1`,
                title: `–ù–æ–≤–æ—Å—Ç–∏ ${source.name} –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã`,
                description: 'RSS-–ª–µ–Ω—Ç–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–æ—Å—Ç—É–ø–∞.',
                link: '#',
                publishedAt: new Date().toISOString(),
                source: {
                    name: source.name,
                    category: source.category
                },
                category: source.category,
                readingTime: 1,
                likes: 0,
                isFallback: true
            }
        ];
        
        return fallbackArticles;
    }
    
    // –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    generateDemoArticles() {
        const demoArticles = [
            {
                id: 'demo-1',
                title: '–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ React 19: —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—Å—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
                description: 'React 19 –ø—Ä–∏–Ω–µ—Å–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–ª—É—á—à–µ–Ω–∏–π, –≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ —Ö—É–∫–∏, —É–ª—É—á—à–µ–Ω–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –ª—É—á—à—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞.',
                link: 'https://habr.com/ru/articles/demo-1',
                publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000),
                source: { name: 'Habr', category: 'tech' },
                category: 'tech',
                readingTime: 5,
                likes: 42,
                isFallback: true
            },
            {
                id: 'demo-2', 
                title: '–¶–ë –†–§ –ø–æ–≤—ã—Å–∏–ª –∫–ª—é—á–µ–≤—É—é —Å—Ç–∞–≤–∫—É –¥–æ 21%',
                description: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –±–∞–Ω–∫ –†–æ—Å—Å–∏–∏ –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –∫–ª—é—á–µ–≤–æ–π —Å—Ç–∞–≤–∫–∏ –¥–ª—è –±–æ—Ä—å–±—ã —Å –∏–Ω—Ñ–ª—è—Ü–∏–µ–π.',
                link: 'https://rbc.ru/economics/demo-2',
                publishedAt: new Date(Date.now() - 4 * 60 * 60 * 1000),
                source: { name: '–†–ë–ö', category: 'business' },
                category: 'business',
                readingTime: 3,
                likes: 28,
                isFallback: true
            },
            {
                id: 'demo-3',
                title: '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –º–µ–¥–∏—Ü–∏–Ω–µ: –ø—Ä–æ—Ä—ã–≤—ã 2024 –≥–æ–¥–∞',
                description: '–û–±–∑–æ—Ä —Å–∞–º—ã—Ö –∑–Ω–∞—á–∏–º—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ò–ò –≤ –æ–±–ª–∞—Å—Ç–∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞ —Ç–µ–∫—É—â–∏–π –≥–æ–¥.',
                link: 'https://ria.ru/science/demo-3',
                publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000),
                source: { name: '–†–ò–ê –ù–æ–≤–æ—Å—Ç–∏', category: 'science' },
                category: 'science',
                readingTime: 7,
                likes: 156,
                isFallback: true
            },
            {
                id: 'demo-4',
                title: '–°—Ç–∞—Ä—Ç–∞–ø –∏–∑ –†–æ—Å—Å–∏–∏ –ø—Ä–∏–≤–ª–µ–∫ $50 –º–ª–Ω –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π',
                description: '–†–æ—Å—Å–∏–π—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è –≤ —Å—Ñ–µ—Ä–µ —Ñ–∏–Ω—Ç–µ—Ö–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã–ª–∞ —Ä–∞—É–Ω–¥ Series B.',
                link: 'https://vc.ru/finance/demo-4',
                publishedAt: new Date(Date.now() - 8 * 60 * 60 * 1000),
                source: { name: 'VC.ru', category: 'startup' },
                category: 'startup',
                readingTime: 4,
                likes: 89,
                isFallback: true
            },
            {
                id: 'demo-5',
                title: '–¢—Ä–µ–Ω–¥—ã –≤–µ–±-–¥–∏–∑–∞–π–Ω–∞ 2024: –º–∏–Ω–∏–º–∞–ª–∏–∑–º –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                description: '–ö–∞–∫–∏–µ –¥–∏–∑–∞–π–Ω-—Ç—Ä–µ–Ω–¥—ã –±—É–¥—É—Ç –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º –≥–æ–¥—É.',
                link: 'https://tproger.ru/articles/demo-5',
                publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
                source: { name: 'Tproger', category: 'design' },
                category: 'design',
                readingTime: 6,
                likes: 73,
                isFallback: true
            }
        ];
        
        return demoArticles;
    }
    
    generateFallbackArticles(source) {
        const fallbackTitles = {
            'habr': [
                '–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ React 19: —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—Å—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
                'TypeScript 5.3: –æ–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö –Ω–æ–≤–æ–≤–≤–µ–¥–µ–Ω–∏–π',
                '–ú–∏–∫—Ä–æ—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—ã –≤ 2024: –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
                'WebAssembly –∏ JavaScript: –±—É–¥—É—â–µ–µ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
                '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'
            ],
            'rbc': [
                '–†–æ—Å—Å–∏–π—Å–∫–∏–π IT-—Ä—ã–Ω–æ–∫ –ø–æ–∫–∞–∑–∞–ª —Ä–æ—Å—Ç –Ω–∞ 15% –≤ 2024 –≥–æ–¥—É',
                '–ù–æ–≤—ã–µ –º–µ—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
                '–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –≥–æ—Å—É—Å–ª—É–≥: –∏—Ç–æ–≥–∏ –∏ –ø–ª–∞–Ω—ã –Ω–∞ 2025 –≥–æ–¥',
                '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤—ã—Ä–æ—Å–ª–∏ –≤ 2 —Ä–∞–∑–∞',
                '–†–∞–∑–≤–∏—Ç–∏–µ –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ü–û: –Ω–æ–≤—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã'
            ],
            'vc-tech': [
                '–°—Ç–∞—Ä—Ç–∞–ø –Ω–µ–¥–µ–ª–∏: –Ω–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
                '–í–µ–Ω—á—É—Ä–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ IT-–ø—Ä–æ–µ–∫—Ç—ã',
                '–û–±–∑–æ—Ä —Ç—Ä–µ–Ω–¥–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è',
                '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –≤ 2024 –≥–æ–¥—É',
                '–ò–Ω—Ç–µ—Ä–≤—å—é —Å –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –µ–¥–∏–Ω–æ—Ä–æ–≥–∞'
            ]
        };
        
        const titles = fallbackTitles[source.id] || [
            `–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ—Ç ${source.name}`,
            `–í–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –º–∏—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π`,
            `–û–±–∑–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –≤ IT`,
            `–ù–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤`,
            `–°–≤–µ–∂–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤`
        ];
        
        return titles.map((title, index) => ({
            id: this.generateArticleId(`${source.id}-fallback-${index}`),
            title: title,
            description: `–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –æ—Ç ${source.name}. –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ RSS –ª–µ–Ω—Ç—ã.`,
            link: `https://${source.name.toLowerCase().replace(/\s+/g, '')}.com/article/${index}`,
            source: {
                id: source.id,
                name: source.name,
                category: source.category
            },
            category: source.category,
            publishedAt: new Date(Date.now() - Math.random() * 86400000 * 7), // –°–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
            timestamp: Date.now(),
            readingTime: Math.ceil(Math.random() * 10) + 2,
            isRead: false,
            isSaved: false,
            isFallback: true // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ fallback –¥–∞–Ω–Ω—ã–µ
        }));
    }
    
    // –ü–∞—Ä—Å–∏–Ω–≥ RSS XML
    parseRSS(xmlText, source) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –≤–∞–ª–∏–¥–Ω—ã–π XML
            if (!xmlText || typeof xmlText !== 'string') {
                throw new Error('–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π XML –∫–æ–Ω—Ç–µ–Ω—Ç');
            }
            
            const parser = new DOMParser();
            const xmlDoc = parser.parseFromString(xmlText, 'text/xml');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
            const parseError = xmlDoc.querySelector('parsererror');
            if (parseError) {
                // –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ XML
                throw new Error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ XML');
            }
            
            // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö RSS/Atom
            let items = xmlDoc.querySelectorAll('item');
            if (items.length === 0) {
                items = xmlDoc.querySelectorAll('entry'); // Atom —Ñ–æ—Ä–º–∞—Ç
            }
            
            if (items.length === 0) {
                // –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π –≤ RSS
                return [];
            }
            
            const articles = [];
            
            items.forEach((item, index) => {
                if (index >= 10) return; // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞
                
                try {
                    const article = this.parseArticle(item, source);
                    if (article) {
                        articles.push(article);
                    }
                } catch (error) {
                    // –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç–∞—Ç—å–∏
                }
            });
            
            // –£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω—ã —Å—Ç–∞—Ç—å–∏
            return articles;
            
        } catch (error) {
            // –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ RSS
            return [];
        }
    }
    
    // –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç—å–∏
    parseArticle(item, source) {
        const getTextContent = (selector) => {
            const element = item.querySelector(selector);
            return element ? element.textContent.trim() : '';
        };
        
        const title = getTextContent('title');
        const link = getTextContent('link');
        const description = getTextContent('description');
        const pubDate = getTextContent('pubDate');
        const category = getTextContent('category') || source.category;
        
        if (!title || !link) {
            return null;
        }
        
        // –û—á–∏—â–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç HTML —Ç–µ–≥–æ–≤
        const cleanDescription = description.replace(/<[^>]*>/g, '').trim();
        
        // –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É
        let publishedAt = new Date();
        if (pubDate) {
            const parsedDate = new Date(pubDate);
            if (!isNaN(parsedDate.getTime())) {
                publishedAt = parsedDate;
            }
        }
        
        return {
            id: this.generateArticleId(link),
            title: this.cleanText(title),
            description: this.cleanText(cleanDescription),
            link,
            source: {
                id: source.id,
                name: source.name,
                category: source.category
            },
            category,
            publishedAt,
            timestamp: Date.now(),
            readingTime: this.estimateReadingTime(cleanDescription),
            isRead: false,
            isSaved: false
        };
    }
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID —Å—Ç–∞—Ç—å–∏
    generateArticleId(link) {
        return btoa(link).replace(/[^a-zA-Z0-9]/g, '').substring(0, 16);
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
    cleanText(text) {
        return text
            .replace(/\s+/g, ' ')
            .replace(/&nbsp;/g, ' ')
            .replace(/&amp;/g, '&')
            .replace(/&lt;/g, '<')
            .replace(/&gt;/g, '>')
            .replace(/&quot;/g, '"')
            .trim();
    }
    
    // –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è
    estimateReadingTime(text) {
        const wordsPerMinute = 200;
        const words = text.split(/\s+/).length;
        const minutes = Math.ceil(words / wordsPerMinute);
        return Math.max(1, minutes);
    }
    
    // –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π
    deduplicateArticles(articles) {
        const seen = new Set();
        const unique = [];
        
        articles.forEach(article => {
            // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            const key = article.title.toLowerCase()
                .replace(/[^\w\s]/g, '')
                .replace(/\s+/g, ' ')
                .trim();
            
            if (!seen.has(key)) {
                seen.add(key);
                unique.push(article);
            }
        });
        
        // –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π
        return unique;
    }
    
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç–∞—Ç–µ–π —Å –æ—Ü–µ–Ω–∫–æ–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
    sortArticles(articles) {
        return articles.sort((a, b) => {
            // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
            if (this.relevanceScoring && this.selectedProfessions.length > 0) {
                const scoreA = this.calculateRelevanceScore(a);
                const scoreB = this.calculateRelevanceScore(b);
                if (scoreB !== scoreA) return scoreB - scoreA;
            }
            
            // –ó–∞—Ç–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
            const dateCompare = new Date(b.publishedAt) - new Date(a.publishedAt);
            if (dateCompare !== 0) return dateCompare;
            
            // –ó–∞—Ç–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            const aPriority = a.source.priority || 999;
            const bPriority = b.source.priority || 999;
            if (aPriority !== bPriority) return aPriority - bPriority;
            
            return 0;
        });
    }
    
    // –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ (–∏–∑ newshub-master-final)
    calculateRelevanceScore(article) {
        if (!this.selectedProfessions.length) return 0;
        
        let score = 0;
        const contentText = `${article.title} ${article.description}`.toLowerCase();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º
        this.selectedProfessions.forEach(professionId => {
            const profession = this.getProfessionById(professionId);
            if (!profession) return;
            
            // –ü—Ä—è–º–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
            if (article.relevantProfessions?.includes(professionId)) {
                score += 50;
            }
            
            // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
            if (profession.keywords) {
                profession.keywords.forEach(keyword => {
                    if (contentText.includes(keyword.toLowerCase())) {
                        score += 10;
                    }
                });
            }
        });
        
        // –ë–æ–Ω—É—Å –∑–∞ —Å–≤–µ–∂–µ—Å—Ç—å
        const hoursAgo = (Date.now() - new Date(article.publishedAt)) / (1000 * 60 * 60);
        if (hoursAgo < 24) score += 5;
        if (hoursAgo < 6) score += 3;
        
        return score;
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –ø–æ ID (–∑–∞–≥–ª—É—à–∫–∞, –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —Å–∏—Å—Ç–µ–º–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–π)
    getProfessionById(id) {
        // –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        const professions = {
            1: { name: "Frontend Developer", keywords: ["react", "vue", "angular", "javascript", "typescript", "css", "html"] },
            2: { name: "Backend Developer", keywords: ["python", "java", "nodejs", "php", "golang", "api"] },
            3: { name: "Fullstack Developer", keywords: ["fullstack", "javascript", "python", "react", "nodejs"] }
        };
        return professions[id];
    }
    
    // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π
    cacheArticles() {
        try {
            const cacheData = {
                articles: this.articles,
                timestamp: Date.now()
            };
            localStorage.setItem('cached_articles', JSON.stringify(cacheData));
        } catch (error) {
            // –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–µ–π
        }
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
    getCachedArticles() {
        try {
            const cached = localStorage.getItem('cached_articles');
            if (cached) {
                const data = JSON.parse(cached);
                if (Date.now() - data.timestamp < this.cacheTimeout * 2) {
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
                    return data.articles || [];
                }
            }
        } catch (error) {
            // –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
        }
        return [];
    }
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π
    filterArticles(filters = {}) {
        let filtered = [...this.articles];
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if (filters.category && filters.category !== 'all') {
            filtered = filtered.filter(article => article.category === filters.category);
        }
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É
        if (filters.sources && filters.sources.length > 0) {
            filtered = filtered.filter(article => filters.sources.includes(article.source.id));
        }
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        if (filters.keywords && filters.keywords.length > 0) {
            filtered = filtered.filter(article => {
                const text = `${article.title} ${article.description}`.toLowerCase();
                return filters.keywords.some(keyword => 
                    text.includes(keyword.toLowerCase())
                );
            });
        }
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ
        if (filters.dateRange) {
            const now = new Date();
            let cutoffDate;
            
            switch (filters.dateRange) {
                case 'today':
                    cutoffDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());
                    break;
                case 'week':
                    cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
                    break;
                case 'month':
                    cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);
                    break;
            }
            
            if (cutoffDate) {
                filtered = filtered.filter(article => article.publishedAt >= cutoffDate);
            }
        }
        
        return filtered;
    }
    
    // –ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—å—è–º
    searchArticles(query) {
        if (!query || query.trim().length < 2) {
            return this.articles;
        }
        
        const searchTerms = query.toLowerCase().trim().split(/\s+/);
        
        return this.articles.filter(article => {
            const searchText = `${article.title} ${article.description}`.toLowerCase();
            return searchTerms.every(term => searchText.includes(term));
        });
    }
    
    // –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º–∏ (–∏–∑ newshub-master-final)
    setSelectedProfessions(professionIds) {
        this.selectedProfessions = professionIds;
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
    }
    
    addProfession(professionId) {
        if (!this.selectedProfessions.includes(professionId)) {
            this.selectedProfessions.push(professionId);
        }
    }
    
    removeProfession(professionId) {
        this.selectedProfessions = this.selectedProfessions.filter(id => id !== professionId);
    }
    
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
    generatePersonalizedDemoArticles() {
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–µ–º–æ-—Å—Ç–∞—Ç–µ–π
        
        const baseArticles = [
            {
                id: 'demo-1',
                title: 'React 19: –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
                description: '–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è React –ø—Ä–∏–Ω–æ—Å–∏—Ç Server Components, —É–ª—É—á—à–µ–Ω–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–æ–≤—ã–µ —Ö—É–∫–∏. –†–∞–∑–±–∏—Ä–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –Ω–æ–≤–æ–≤–≤–µ–¥–µ–Ω–∏—è.',
                link: 'https://habr.com/ru/articles/demo-1',
                publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000),
                source: { name: 'Habr', category: 'tech', priority: 1 },
                category: 'tech',
                readingTime: 5,
                likes: 42,
                relevantProfessions: [1, 3], // Frontend, Fullstack
                keywords: ['react', 'javascript', 'frontend']
            },
            {
                id: 'demo-2',
                title: 'Python –≤ 2024: –¢—Ä–µ–Ω–¥—ã –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–∞–∑–≤–∏—Ç–∏—è',
                description: '–ê–Ω–∞–ª–∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ Python, –Ω–æ–≤—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏. –ß—Ç–æ –∂–¥–µ—Ç Python-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ –±–ª–∏–∂–∞–π—à–µ–º –±—É–¥—É—â–µ–º.',
                link: 'https://tproger.ru/articles/demo-2',
                publishedAt: new Date(Date.now() - 4 * 60 * 60 * 1000),
                source: { name: 'Tproger', category: 'tech', priority: 3 },
                category: 'tech',
                readingTime: 7,
                likes: 89,
                relevantProfessions: [2, 3], // Backend, Fullstack
                keywords: ['python', 'backend', 'development']
            },
            {
                id: 'demo-3',
                title: '–¶–ë –†–§ –ø–æ–≤—ã—Å–∏–ª –∫–ª—é—á–µ–≤—É—é —Å—Ç–∞–≤–∫—É: –≤–ª–∏—è–Ω–∏–µ –Ω–∞ IT-—Å–µ–∫—Ç–æ—Ä',
                description: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –±–∞–Ω–∫ –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –∫–ª—é—á–µ–≤–æ–π —Å—Ç–∞–≤–∫–∏. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏.',
                link: 'https://rbc.ru/economics/demo-3',
                publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000),
                source: { name: '–†–ë–ö', category: 'business', priority: 2 },
                category: 'business',
                readingTime: 4,
                likes: 156,
                relevantProfessions: [],
                keywords: ['—ç–∫–æ–Ω–æ–º–∏–∫–∞', '—Ñ–∏–Ω–∞–Ω—Å—ã', '–±–∏–∑–Ω–µ—Å']
            },
            {
                id: 'demo-4',
                title: 'Fullstack —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π 2024',
                description: '–û–±–∑–æ—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–ª—è fullstack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. React, Node.js, TypeScript –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.',
                link: 'https://vc.ru/dev/demo-4',
                publishedAt: new Date(Date.now() - 8 * 60 * 60 * 1000),
                source: { name: 'VC.ru', category: 'tech', priority: 2 },
                category: 'tech',
                readingTime: 8,
                likes: 234,
                relevantProfessions: [1, 2, 3], // Frontend, Backend, Fullstack
                keywords: ['fullstack', 'javascript', 'nodejs', 'typescript']
            },
            {
                id: 'demo-5',
                title: '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è',
                description: '–ö–∞–∫ –ò–ò –º–µ–Ω—è–µ—Ç –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞, AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –∏ –Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.',
                link: 'https://habr.com/ru/articles/demo-5',
                publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
                source: { name: 'Habr', category: 'tech', priority: 1 },
                category: 'tech',
                readingTime: 6,
                likes: 178,
                relevantProfessions: [1, 2, 3],
                keywords: ['ai', 'artificial intelligence', 'development', 'automation']
            }
        ];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∫ –∫–∞–∂–¥–æ–π —Å—Ç–∞—Ç—å–µ
        return baseArticles.map(article => ({
            ...article,
            relevanceScore: this.calculateRelevanceScore(article)
        }));
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    async checkSourcesHealth() {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        
        const activeSources = this.getActiveSources();
        const healthCheck = {
            total: activeSources.length,
            available: 0,
            unavailable: 0,
            sources: {}
        };
        
        for (const source of activeSources) {
            try {
                const controller = new AbortController();
                const timeoutId = setTimeout(() => controller.abort(), 5000);
                
                const response = await fetch(`${this.corsProxies[0]}${encodeURIComponent(source.url)}`, {
                    method: 'HEAD',
                    signal: controller.signal
                });
                
                clearTimeout(timeoutId);
                
                if (response.ok) {
                    healthCheck.available++;
                    healthCheck.sources[source.id] = 'available';
                    // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Å—Ç—É–ø–µ–Ω
                } else {
                    healthCheck.unavailable++;
                    healthCheck.sources[source.id] = 'unavailable';
                    // –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                }
            } catch (error) {
                healthCheck.unavailable++;
                healthCheck.sources[source.id] = 'error';
                // –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            }
        }
        
        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        return healthCheck;
    }

    // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ —Å–±—Ä–æ—Å –æ—à–∏–±–æ–∫
    clearCache() {
        this.cache.clear();
        this.failedSources.clear();
        // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
        
        if (typeof window.showToast === 'function') {
            window.showToast('–ö—ç—à –æ—á–∏—â–µ–Ω, –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã', 'info');
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    getStats() {
        const stats = {
            totalArticles: this.articles.length,
            sources: this.getActiveSources().length,
            categories: {},
            selectedProfessions: this.selectedProfessions.length,
            failedSources: this.failedSources.size,
            lastUpdate: new Date()
        };
        
        this.articles.forEach(article => {
            const category = article.category || 'general';
            stats.categories[category] = (stats.categories[category] || 0) + 1;
        });
        
        return stats;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (typeof window !== 'undefined') {
    window.RSSAggregator = RSSAggregator;
}
